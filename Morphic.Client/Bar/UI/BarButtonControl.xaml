<ui:BarItemControl x:Class="Morphic.Client.Bar.UI.BarButtonControl"
                         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                         xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                         xmlns:ui="clr-namespace:Morphic.Client.Bar.UI"
                         mc:Ignorable="d" d:DesignWidth="100" d:DesignHeight="70"
                         MinHeight="87"
                         d:DataContext="{d:DesignInstance ui:BarButtonControl, IsDesignTimeCreatable=True}"
                         >
    <ui:BarItemControl.Resources>
        <!-- Colours based on the active theme -->
        <SolidColorBrush x:Key="Background" Color="{Binding ActiveTheme.Background, FallbackValue=Yellow}"/>
        <SolidColorBrush x:Key="Foreground" Color="{Binding ActiveTheme.TextColor, FallbackValue=Black}"/>
        <SolidColorBrush x:Key="BorderColor" Color="{Binding ActiveTheme.BorderColor, FallbackValue=Transparent}"/>
        <!-- Convert a boolean to a visibility -->
        <ui:Ternary x:Key="BoolVisibility" False="Collapse" True="Visible" />
        <ui:Ternary x:Key="ColumnHeight" False="0*" True="1*" />

        <!-- Make the button style-less -->
        <Style BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentPresenter />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </ui:BarItemControl.Resources>
    
    <Button x:Name="Button"
            Click="Button_OnClick"
            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
            HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
            >
        <Grid>
            <Grid.RowDefinitions>
                <!-- Contains the top half of the icon -->
                <RowDefinition Height="*"></RowDefinition>
                <!-- Contains the bottom half of the icon, and top half of the background -->
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="2*"></RowDefinition>
            </Grid.RowDefinitions>

            <!-- The background colour -->
            <Border
                Visibility="Visible"
                Grid.Row="1" Grid.RowSpan="2"
                CornerRadius="15"
                Padding="0"
                Background="{StaticResource Background}" />
            
            <!-- Icon -->
            <Image
                Grid.Row="0" Grid.RowSpan="2"
                Source="{Binding BarItem.IconPath}"
                Visibility="{Binding BarItem.ShowIcon, Converter={StaticResource BoolVisibility}}"
                Stretch="Uniform"
                Width="32" Height="32"
                />
            
            <!-- Item text -->
            <TextBlock
                Visibility="{Binding BarItem.ShowIcon, Converter={StaticResource BoolVisibility}}"
                Grid.Row="2"
                Text="{Binding BarItem.Text}"
                TextWrapping="Wrap"
                Foreground="{DynamicResource Foreground}"
                HorizontalAlignment="Center" VerticalAlignment="Top"
                Background="{StaticResource Background}"
                Margin="2 5 2 5"
                TextAlignment="Center"
                FontWeight="Bold"
                />

            <!-- Main border -->
            <Border
                Grid.Row="0" Grid.RowSpan="3"
                BorderBrush="{DynamicResource BorderColor}"
                BorderThickness="{Binding ActiveTheme.BorderSize, FallbackValue=0}"
                />
        </Grid>
    </Button>
</ui:BarItemControl>
